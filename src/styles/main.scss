@use 'variables' as v;
@use 'mixins' as m;
@use 'sass:color';

/* Component styles */

// Header styles
.header {
  position: fixed;
  width: 100%;
  z-index: v.$z-50;
  transition: v.$transition-standard;
  
  &--scrolled {
    background-color: v.$pub-yellow;
    border-top: 4px solid v.$pub-amber;
  }
  
  .logo-container {
    transition: transform 0.3s ease-out, width 0.3s ease, height 0.3s ease;
    
    &:hover {
      transform: scale(1.05);
    }
  }
  
  .menu-link {
    @include m.hover-color(v.$white);
    
    .header--scrolled & {
      color: v.$black;
      
      &:hover {
        // Use color.adjust instead of darken
        color: color.adjust(v.$pub-yellow, $lightness: -15%);
      }
    }
  }
}

// Hero section
.hero {
  background-image: url('/bar.jpg');
  background-attachment: fixed;
  background-size: cover;
  background-position: center;
  
  &__overlay {
    background-color: rgba(v.$black, 0.4);
  }
  
  &__title {
    color: v.$pub-yellow;
    font-weight: bold;
  }
  
  &__subtitle {
    color: v.$white;
  }
  
  &__cta {
    @include m.button-primary;
  }
}

// Contact cards
.contact-card {
  @include m.card;
  
  &__image {
    height: 12rem;
    object-fit: cover;
    width: 100%;
    border-top-left-radius: v.$radius-lg;
    border-top-right-radius: v.$radius-lg;
  }
  
  &__icon {
    color: v.$pub-amber;
  }
  
  &__title {
    font-weight: 600;
    color: v.$black;
  }
  
  &__link {
    @include m.hover-color(v.$pub-amber);
    display: flex;
    align-items: center;
    gap: v.$spacing-2;
  }
}

// Food section
.food-section {
  @include m.section-padding;
  
  // Fix the mixed declarations issue by properly wrapping
  & {
    background-color: v.$white;
  }
  
  &__title {
    font-weight: bold;
    text-align: center;
    font-size: v.$font-size-4xl;
  }
  
  &__subtitle {
    font-weight: 600;
    font-size: v.$font-size-2xl;
  }
  
  &__text {
    color: v.$gray-700;
    font-size: v.$font-size-lg;
  }
  
  &__times {
    background-color: rgba(v.$pub-yellow, 0.1);
    border-radius: v.$radius-lg;
    padding: v.$spacing-6;
  }
  
  &__cta {
    @include m.button-secondary;
  }
}

// Harveys section
.harveys-section {
  @include m.section-padding;
  
  // Fix the mixed declarations issue by properly wrapping
  & {
    background-color: rgba(v.$pub-yellow, 0.1);
  }
  
  &__title {
    font-weight: bold;
    text-align: center;
    font-size: v.$font-size-4xl;
  }
  
  &__text {
    color: v.$gray-700;
    font-size: v.$font-size-lg;
  }
}

// Events section
.events-section {
  @include m.section-padding;
  
  // Fix the mixed declarations issue by properly wrapping
  & {
    background-color: v.$white;
  }
  
  &__title {
    font-weight: bold;
    text-align: center;
    font-size: v.$font-size-4xl;
  }
  
  .event-card {
    border: 1px solid v.$pub-amber;
    border-radius: v.$radius-xl;
    overflow: hidden;
    box-shadow: v.$shadow-xl;
    background-color: v.$white;
    @include m.hover-lift;
    
    &__image {
      height: 12rem;
      object-fit: cover;
      width: 100%;
      
      &--bottom {
        object-position: bottom;
      }
      
      &--top {
        object-position: top;
      }
    }
    
    &__title {
      font-weight: 600;
      font-size: v.$font-size-xl;
    }
    
    &__subtitle {
      color: v.$gray-600;
    }
  }
}

// Footer
.footer {
  background-color: v.$pub-amber;
  color: v.$white;
  padding-top: v.$spacing-12;
  padding-bottom: v.$spacing-12;
  border-top: 4px solid v.$pub-yellow;
  
  &__title {
    color: v.$white;
    font-weight: 600;
    font-size: v.$font-size-xl;
  }
  
  &__link {
    @include m.hover-color(v.$black);
  }
  
  &__icon {
    width: 1rem;
    height: 1rem;
  }
  
  &__copyright {
    margin-top: v.$spacing-8;
    border-top: 1px solid v.$pub-yellow;
    padding-top: v.$spacing-4;
    text-align: center;
    font-size: v.$font-size-sm;
  }
}

// Slider components
.slider {
  border-radius: v.$radius-lg;
  box-shadow: v.$shadow-xl;
  width: 100%;
  overflow: hidden;
  
  &__image {
    width: 100%;
    height: 300px;
    object-fit: cover;
    object-position: bottom;
    
    @include m.respond-to(sm) {
      height: 400px;
    }
    
    @include m.respond-to(md) {
      height: 500px;
    }
    
    @include m.respond-to(lg) {
      height: 600px;
    }
  }
}

// Mobile menu
.mobile-menu {
  position: absolute;
  top: 100%;
  right: 0;
  width: 16rem;
  background-color: v.$white;
  border-radius: v.$radius-lg;
  box-shadow: v.$shadow-xl;
  padding-top: v.$spacing-4;
  padding-bottom: v.$spacing-4;
  
  &__link {
    display: block;
    padding: v.$spacing-2 v.$spacing-6;
    transition: background-color 0.2s ease;
    
    &:hover {
      background-color: rgba(v.$pub-yellow, 0.1);
    }
  }
  
  &__section {
    padding: v.$spacing-4 v.$spacing-6;
    border-top: 1px solid v.$gray-200;
  }
}

// Custom swiper pagination
:global {
  .swiper-pagination-bullet {
    background: v.$pub-amber;
    opacity: 0.7;
    
    &-active {
      opacity: 1;
      background: v.$pub-amber;
    }
  }
}

/* Add these styles to your main.scss file */

/* Universal image container class */
.responsive-image-container {
    position: relative;
    width: 100%;
    overflow: hidden;
    /* Use padding-top with percentage to maintain aspect ratio */
    padding-top: 56.25%; /* 16:9 Aspect Ratio (9/16 = 0.5625 = 56.25%) */
    /* For 4:3 aspect ratio, use 75% (3/4 = 0.75 = 75%) */
  }
  
  /* For a more square-ish image */
  .responsive-image-container--4-3 {
    padding-top: 75%; /* 4:3 Aspect Ratio */
  }
  
  /* Image inside container */
  .responsive-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: contain; /* Shows whole image instead of cropping */
    background-color: #f8f8f8; /* Light background for transparent images */
  }
  
  /* For cases where you want to fill the container, but prioritize showing important parts */
  .responsive-image--cover {
    object-fit: cover;
    object-position: center; /* Default position */
  }
  
  .responsive-image--cover-top {
    object-position: center top;
  }
  
  .responsive-image--cover-bottom {
    object-position: center bottom;
  }
  
  /* Apply these modifiers for different device sizes */
  @media (max-width: 640px) {
    /* For mobile, prioritize showing the whole image */
    .responsive-image--mobile-contain {
      object-fit: contain;
    }
    
    /* Adjust container height for mobile if needed */
    .responsive-image-container--mobile-taller {
      padding-top: 85%; /* Taller aspect ratio for mobile */
    }
  }
  
  /* For fixed height scenarios with responsive width */
  .fixed-height-image-container {
    width: 100%;
    height: 300px; /* Base height */
    overflow: hidden;
  }
  
  @media (min-width: 640px) {
    .fixed-height-image-container {
      height: 350px;
    }
  }
  
  @media (min-width: 768px) {
    .fixed-height-image-container {
      height: 400px;
    }
  }
  
  @media (min-width: 1024px) {
    .fixed-height-image-container {
      height: 450px;
    }
  }
  
  /* For images in cards or smaller containers */
  .card-image {
    width: 100%;
    aspect-ratio: 16/9; /* Modern browsers support aspect-ratio */
    object-fit: cover;
  }
  
  /* Fallback for browsers that don't support aspect-ratio */
  @supports not (aspect-ratio: 16/9) {
    .card-image-container {
      position: relative;
      width: 100%;
      padding-top: 56.25%;
    }
    
    .card-image-container img {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }